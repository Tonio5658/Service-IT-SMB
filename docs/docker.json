{
  "title": "Docker LXC",
  "category": "Docker - Kubernetes",
  "imgSrc": "https://raw.githubusercontent.com/loganmarchione/homelab-svg-assets/main/assets/docker.svg",
  "scripts": [
    "https://github.com/community-scripts/ProxmoxVE/raw/main/ct/docker.sh",
    "https://github.com/community-scripts/ProxmoxVE/raw/main/ct/alpine-docker.sh"
  ],
  "textContent": "\n                \n                 Docker LXC \n                 Options to Install Portainer and/or Docker Compose V2 \n                Docker is an\n                    open-source\n                    project for automating the deployment of applications as portable, self-sufficient containers.\n                ðŸ›ˆ If the LXC is created Privileged, the script will automatically set up USB passthrough.\n                To create a new Proxmox VE Docker LXC, run the command below in the Proxmox VE Shell.\n                Copybash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/docker.sh)\"\n                âš¡ Default Settings: 2GB RAM - 4GB Storage - 2vCPU âš¡\n                As an alternative option, you can use Alpine Linux and the Docker package to create a Docker LXC\n                    container with faster creation time and minimal system resource usage. \n                To create a new Proxmox VE Alpine-Docker LXC, run the command below in the Proxmox VE Shell.\n                    \n                \n                Copybash -c \"$(wget -qO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/alpine-docker.sh)\"\n                âš¡ Default Settings: 1GB RAM - 2GB Storage - 1vCPU âš¡\n                ðŸ›ˆ Run Compose V2 by replacing the hyphen (-) with a space, using docker compose, instead of\n                    docker-compose.\n                Portainer Interface: (https) IP:9443\n            ",
  "outerHTML": "<div class=\"item\">\n                <p align=\"center\"><img src=\"https://raw.githubusercontent.com/loganmarchione/homelab-svg-assets/main/assets/docker.svg\" height=\"100\"></p>\n                <h1 align=\"center\" id=\"heading\"> Docker LXC </h1>\n                <h3 align=\"center\"> Options to Install Portainer and/or Docker Compose V2 </h3>\n                <p><a href=\"https://www.docker.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Docker</a> is an\n                    open-source\n                    project for automating the deployment of applications as portable, self-sufficient containers.</p>\n                <h4>ðŸ›ˆ If the LXC is created Privileged, the script will automatically set up USB passthrough.</h4>\n                <p>To create a new Proxmox VE Docker LXC, run the command below in the <b>Proxmox VE Shell</b>.</p>\n                <pre><button class=\"copy-button \">Copy</button><div style=\"color: rgb(227, 234, 242); background: rgb(17, 27, 39); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto;\"><code class=\"language-bash\" style=\"color: rgb(227, 234, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\"><span class=\"token\" style=\"color: rgb(198, 153, 227);\">bash</span><span> -c </span><span class=\"token\" style=\"color: rgb(145, 208, 118);\">\"</span><span class=\"token\" style=\"color: rgb(108, 184, 230);\">$(</span><span class=\"token\" style=\"color: rgb(198, 153, 227);\">wget</span><span class=\"token\" style=\"color: rgb(108, 184, 230);\"> -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/docker.sh</span><span class=\"token\" style=\"color: rgb(108, 184, 230);\">)</span><span class=\"token\" style=\"color: rgb(145, 208, 118);\">\"</span></code></div></pre>\n                <h3 align=\"center\" id=\"heading\">âš¡ Default Settings: 2GB RAM - 4GB Storage - 2vCPU âš¡</h3>\n                <p>As an alternative option, you can use Alpine Linux and the Docker package to create a Docker LXC\n                    container with faster creation time and minimal system resource usage. <br></p>\n                <p>To create a new Proxmox VE Alpine-Docker LXC, run the command below in the <b>Proxmox VE Shell</b>.\n                    <br>\n                </p>\n                <pre><button class=\"copy-button \">Copy</button><div style=\"color: rgb(227, 234, 242); background: rgb(17, 27, 39); font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none; padding: 1em; margin: 0.5em 0px; overflow: auto;\"><code class=\"language-bash\" style=\"color: rgb(227, 234, 242); background: none; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; overflow-wrap: normal; line-height: 1.5; tab-size: 4; hyphens: none;\"><span class=\"token\" style=\"color: rgb(198, 153, 227);\">bash</span><span> -c </span><span class=\"token\" style=\"color: rgb(145, 208, 118);\">\"</span><span class=\"token\" style=\"color: rgb(108, 184, 230);\">$(</span><span class=\"token\" style=\"color: rgb(198, 153, 227);\">wget</span><span class=\"token\" style=\"color: rgb(108, 184, 230);\"> -qO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/alpine-docker.sh</span><span class=\"token\" style=\"color: rgb(108, 184, 230);\">)</span><span class=\"token\" style=\"color: rgb(145, 208, 118);\">\"</span></code></div></pre>\n                <h3 align=\"center\" id=\"heading\">âš¡ Default Settings: 1GB RAM - 2GB Storage - 1vCPU âš¡</h3>\n                <h4>ðŸ›ˆ Run Compose V2 by replacing the hyphen (-) with a space, using docker compose, instead of\n                    docker-compose.</h4>\n                <p><strong>Portainer Interface: (https) IP:9443</strong></p>\n            </div>",
  "ports": [
    "9443"
  ]
}