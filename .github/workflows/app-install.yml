name: Run PR Install Script
on:
  pull_request:
    branches:
      - main
    paths:
      - "ct/*.sh"
jobs:
  run-install-script:
    runs-on: pvehost   
    steps:
      - name: Install GitHub CLI
        run: |
          # Install GitHub CLI
          sudo apt update
          sudo apt install -y git gh
          
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0  # Fetch full commit history
      - name: Add Git safe directory
        run: |
          git config --global --add safe.directory /__w/ProxmoxVE/ProxmoxVE
      
      - name: Set up GH_TOKEN
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "GH_TOKEN=${GH_TOKEN}" >> $GITHUB_ENV
      - name: Get changed files in PR
        id: changed-files
        run: |
          # Use GitHub CLI to get the list of changed files in the PR
          CHANGED_FILES=$(gh pr diff --name-only ${{ github.event.pull_request.number }})
          echo "Changed files: $CHANGED_FILES"
          # Set CHANGED_FILE as an environment variable in the correct format
          echo "SCRIPT=$CHANGED_FILES" >> $GITHUB_ENV

      - name: Check if install script is changed
        id: check-install-script
        run: |
          if echo "${{ env.SCRIPT }}" | grep -q '^install/.*-install.sh$'; then
            echo "App-Install.sh script found!"
          elif echo "${{ env.SCRIPT }}" | grep -q '^ct/.*.sh$'; then
            echo "App.sh script found."
          else
            exit 1
          fi
          echo "${{ env.SCRIPT }}"

      - name: Replace $FUNCTION_FILE_PATH
        run: |
          sed -i 's|source /dev/stdin <<<"$FUNCTIONS_FILE_PATH"|source <(curl -s https://raw.githubusercontent.com/michelroegl-brunner/ProxmoxVE/refs/heads/main/.github/workflows/scripts/app-test/pr-install.func)|' ${{ env.SCRIPT }}
      - name: Make script executable
        run: chmod +x ${{ env.SCRIPT }}

 
      - name: Run install script and capture error message
        id: run-install
        run: |
          set +e  # Allow the command to fail
          ERROR_MSG=$(sudo ./${{ env.SCRIPT }} 2>&1 > /dev/null)
          echo "ERROR: $ERROR_MSG" 
          if [ -n "$ERROR_MSG" ]; then
            echo "$ERROR_MSG" > result.log
            echo "ERROR_MSG="$ERROR_MSG"" >> $GITHUB_ENV
          fi        
          set -e  # Restore exit-on-error
          
      - name: Post error comment if install script fails
        if: ${{ env.ERROR_MSG != '' }} 
        run: |
          ERROR_MSG=$(cat result.log)
          ERROR_MSG_ESCAPED=$(echo "$ERROR_MSG" | sed 's/[&/\]/\\&/g')  # Escape special characters
          
          # Post an error comment to the pull request with the captured error message
          echo "Posting error message as a comment..."
          gh pr comment ${{ github.event.pull_request.number }} \
            --body 'The install script failed with the following message: ***${ERROR_MSG_ESCAPED}***'
  
